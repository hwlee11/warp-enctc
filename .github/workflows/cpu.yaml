name: CPU
on:
  push:
    branches:
      - pytorch_bindings
  pull_request:
    branches:
      - pytorch_bindings
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: espnet/warpctc_builder:cpu
    defaults:
      run:
        shell: bash --login -eo pipefail {0}
    strategy:
      matrix:
        python-version: [3.6.13, 3.7.10, 3.8.7, 3.9.1]
        pytorch-version: [1.1.0, 1.2.0, 1.3.1, 1.4.0, 1.5.1, 1.6.0]
        exclude:
          - python-version: 3.8.7
            pytorch-version: 1.1.0
          - python-version: 3.8.7
            pytorch-version: 1.2.0
          - python-version: 3.8.7
            pytorch-version: 1.3.1
          - python-version: 3.9.1
            pytorch-version: 1.1.0
          - python-version: 3.9.1
            pytorch-version: 1.2.0
          - python-version: 3.9.1
            pytorch-version: 1.3.1
          - python-version: 3.9.1
            pytorch-version: 1.4.0
          - python-version: 3.9.1
            pytorch-version: 1.5.1
          - python-version: 3.9.1
            pytorch-version: 1.6.0
    steps:
      - uses: actions/checkout@v2
      - name: Copy .bash_profile
        run: cp /root/.bash_profile ~/
      - name: Build warpctc
        run: |
          mkdir build
          cd build
          cmake ..
          make
      - name: Set Python version
        run: pyenv global ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U pip setuptools
          pip install numpy pytest pytest-flakes wheel torch==${{ matrix.pytorch-version }}
      - name: Build wheel
        run: |
          cd pytorch_binding
          python setup.py bdist_wheel
          python wheel/rename_wheels.py
          ls dist
          echo "WHEEL_NAME=$(basename dist/*.whl)" >> $GITHUB_ENV
      - name: Install wheel
        run: |
          cd pytorch_binding
          pip install dist/warpctc_pytorch*.whl
      - name: Run tests
        run: |
          cd pytorch_binding
          pytest --flakes
          pytest tests
      - name: Set 'upload_url' of the latest release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # https://docs.github.com/en/rest/reference/repos#get-the-latest-release
          cmd="curl -s -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/espnet/warp-ctc/releases/latest"
          output_json=$($cmd)
          echo "UPLOAD_URL=$(echo $output_json | jq .upload_url | sed 's/"//g')" >> $GITHUB_ENV
      - name: Upload a wheel to the latest release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: pytorch_binding/dist/${{ env.WHEEL_NAME }}
          asset_name: ${{ env.WHEEL_NAME }}
          asset_content_type: application/zip
